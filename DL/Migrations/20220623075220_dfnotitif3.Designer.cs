// <auto-generated />
using System;
using DL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DL.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220623075220_dfnotitif3")]
    partial class dfnotitif3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DL.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Car")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DL.Entities.AuthrizedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuthrizedPersons");
                });

            modelBuilder.Entity("DL.Entities.BalanceBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahId");

                    b.ToTable("BalanceBanks");
                });

            modelBuilder.Entity("DL.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("DL.Entities.BoxMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahId");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("DL.Entities.CategorySpareParts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryNameAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CategoryNameEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CategorySpareParts");
                });

            modelBuilder.Entity("DL.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReciverId")
                        .HasColumnType("int");

                    b.Property<int?>("RepairOrderId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("DL.Entities.Cheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChequeNumber")
                        .HasColumnType("int");

                    b.Property<int>("ChequeStatus")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahBankId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahBankId");

                    b.HasIndex("WarshahId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("DL.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityNameAr = "الرياض",
                            CityNameEn = " Elryad ",
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            RegionId = 1
                        });
                });

            modelBuilder.Entity("DL.Entities.Configration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GetCustomerAbroval")
                        .HasColumnType("bit");

                    b.Property<decimal>("GetVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodDayCustomerApprove")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Configrations");
                });

            modelBuilder.Entity("DL.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryNameAr = "السعودية",
                            CountryNameEn = " Saudi Arabia ",
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DL.Entities.CreditorNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ReturnMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReturnVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WarshahId");

                    b.ToTable("CreditorNotices");
                });

            modelBuilder.Entity("DL.Entities.DebitAndCreditor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NoticeNumber")
                        .HasColumnType("int");

                    b.Property<string>("NoticeSerial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWithoutVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WarshahId");

                    b.ToTable("DebitAndCreditors");
                });

            modelBuilder.Entity("DL.Entities.DebitNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WarshahId");

                    b.ToTable("DebitNotices");
                });

            modelBuilder.Entity("DL.Entities.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscribtionId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscribtionId");

                    b.ToTable("Durations");
                });

            modelBuilder.Entity("DL.Entities.ExpensesCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpensesCategoryNameAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExpensesCategoryNameEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExpensesCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpensesCategoryNameAr = "خاضع للضريبة",
                            ExpensesCategoryNameEn = " Taxable ",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpensesCategoryNameAr = "غير خاضع للضريبة",
                            ExpensesCategoryNameEn = "  Not Taxable ",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("DL.Entities.ExpensesTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpensesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ExpensesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWithoutVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesCategoryId");

                    b.HasIndex("ExpensesTypeId");

                    b.HasIndex("WarshahId");

                    b.ToTable("ExpensesTransactions");
                });

            modelBuilder.Entity("DL.Entities.ExpensesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpensesCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExpensesTypeNameAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExpensesTypeNameEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesCategoryId");

                    b.HasIndex("WarshahId");

                    b.ToTable("ExpensesTypes");
                });

            modelBuilder.Entity("DL.Entities.FixedBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FixedBanks");
                });

            modelBuilder.Entity("DL.Entities.FixedCountryMotor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryMotorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FixedCountryMotors");
                });

            modelBuilder.Entity("DL.Entities.InspectionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InspectionSectionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommon")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionSectionId");

                    b.HasIndex("WarshahId");

                    b.ToTable("InspectionItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "لصوفة الامامية",
                            ItemNameEn = " Front wool ",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "حالة الماكينة",
                            ItemNameEn = " Machine condition ",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الصوفة الخلفية",
                            ItemNameEn = " Rear wool ",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "تصفية ماكينة",
                            ItemNameEn = " Filter machine ",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "كرسي الماكينة",
                            ItemNameEn = " Machine chair ",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وجه كرتير الماكينة",
                            ItemNameEn = " The face of the machine carter ",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وجه غطاء البلوف",
                            ItemNameEn = "The face of the cabbage cover ",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "قاعدة فلتر الزيت ",
                            ItemNameEn = " Oil filter base ",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وجه الثلاجة ",
                            ItemNameEn = "The face of the fridge",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "تهريبات ماء ",
                            ItemNameEn = " Water smuggling",
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "رادياتير الماء ",
                            ItemNameEn = " Water radiator",
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = " وجه صدر الماكينة امام / خلفي ",
                            ItemNameEn = "Front/rear face of the machine's chest",
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "طرمبة الماء ",
                            ItemNameEn = "Water pump",
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "السيور ",
                            ItemNameEn = "Belts",
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "صفايه البنزين ",
                            ItemNameEn = "Gas can",
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "فلتر الهواء  ",
                            ItemNameEn = " Air filter",
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وجه طرمبة الزيت",
                            ItemNameEn = "The face of the oil pump",
                            Status = true
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = " الصوفة الامامية",
                            ItemNameEn = "Front wool",
                            Status = true
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الصوفة الخلفية",
                            ItemNameEn = "Rear wool",
                            Status = true
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "كرسي الجير بوكس",
                            ItemNameEn = "Lime Box Chair",
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وجه كرتير الجير ",
                            ItemNameEn = "The face of the lime carter.",
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "صوف عصا الجير  ",
                            ItemNameEn = "Lime stick wool",
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ماسورة مبرد الجير ",
                            ItemNameEn = "Lime cooler pipe",
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "حالة الجير ",
                            ItemNameEn = "Lime case",
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = " البطارية ",
                            ItemNameEn = "Battery",
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الدينمو",
                            ItemNameEn = "the dynamo",
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "السلف ",
                            ItemNameEn = "Predecessor",
                            Status = true
                        },
                        new
                        {
                            Id = 28,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الانوار ",
                            ItemNameEn = "Lights",
                            Status = true
                        },
                        new
                        {
                            Id = 29,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "لمكيف كمبروسر ",
                            ItemNameEn = "For a kambroser air conditioner.  ",
                            Status = true
                        },
                        new
                        {
                            Id = 30,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "السنتر لوك ",
                            ItemNameEn = "Center lock",
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "المساحات ",
                            ItemNameEn = "wiper ",
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "شاشة المكيف ",
                            ItemNameEn = "Air conditioner screen",
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "كودات الكمبيوتر  ",
                            ItemNameEn = "Computer codes",
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ثلاجة مكيف",
                            ItemNameEn = " Air-conditioned refrigerator ",
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 3,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "رديتر مكيف",
                            ItemNameEn = " Redditor air conditioner ",
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 4,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "زيت الماكينة",
                            ItemNameEn = " Machine oil ",
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 4,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "زيت الجير",
                            ItemNameEn = " Lime oil ",
                            Status = true
                        },
                        new
                        {
                            Id = 38,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 4,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "زيت الفرامل",
                            ItemNameEn = " Brake oil ",
                            Status = true
                        },
                        new
                        {
                            Id = 39,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 4,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ماء الردياتير",
                            ItemNameEn = " Water of the radyter",
                            Status = true
                        },
                        new
                        {
                            Id = 40,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 4,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ماء المساحات",
                            ItemNameEn = " Water spaces ",
                            Status = true
                        },
                        new
                        {
                            Id = 41,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الأذرعة ",
                            ItemNameEn = " Arms ",
                            Status = true
                        },
                        new
                        {
                            Id = 42,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الركبة اليمنى واليسرى ",
                            ItemNameEn = "Right and left knee",
                            Status = true
                        },
                        new
                        {
                            Id = 43,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ذراع شاص",
                            ItemNameEn = "A chasing arm",
                            Status = true
                        },
                        new
                        {
                            Id = 44,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ذراع الدودة ",
                            ItemNameEn = "Worm arm",
                            Status = true
                        },
                        new
                        {
                            Id = 45,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "علبة الدركسيون (طلمبة)",
                            ItemNameEn = "Gendarmerie box (Talamba)",
                            Status = true
                        },
                        new
                        {
                            Id = 46,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "لبات الدركسيون",
                            ItemNameEn = "Pat Draconian",
                            Status = true
                        },
                        new
                        {
                            Id = 47,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الدودة",
                            ItemNameEn = "The worm",
                            Status = true
                        },
                        new
                        {
                            Id = 48,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "عامود الدركسيون",
                            ItemNameEn = "Gendarmerie column",
                            Status = true
                        },
                        new
                        {
                            Id = 49,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "المساعدات الامامية / كراسي مساعدات",
                            ItemNameEn = "Front aid / aid chairs",
                            Status = true
                        },
                        new
                        {
                            Id = 50,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "المساعدات الخلفية",
                            ItemNameEn = "Rear aid",
                            Status = true
                        },
                        new
                        {
                            Id = 51,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "مسمام عامود التوازن",
                            ItemNameEn = "Balance column valve",
                            Status = true
                        },
                        new
                        {
                            Id = 52,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "صليب عامود الدوران",
                            ItemNameEn = "Spin column cross",
                            Status = true
                        },
                        new
                        {
                            Id = 53,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "جلد المقص العلوي",
                            ItemNameEn = "Upper scissor skin",
                            Status = true
                        },
                        new
                        {
                            Id = 54,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "جلد المقص السفلي",
                            ItemNameEn = "Leather lower scissors",
                            Status = true
                        },
                        new
                        {
                            Id = 55,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 5,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "اليايات ",
                            ItemNameEn = "The Yayat",
                            Status = true
                        },
                        new
                        {
                            Id = 56,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "رامل (امامية / خلفية)",
                            ItemNameEn = "Ramel (front/back)",
                            Status = true
                        },
                        new
                        {
                            Id = 57,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "هوب (امامي / خلفي)  ",
                            ItemNameEn = "Hope (front/back) ",
                            Status = true
                        },
                        new
                        {
                            Id = 58,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "فلنجات (امامية / خلفية) ",
                            ItemNameEn = "Flangat (front/back)",
                            Status = true
                        },
                        new
                        {
                            Id = 59,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "علبة الفرامل الرئيسية",
                            ItemNameEn = "Main brake box",
                            Status = true
                        },
                        new
                        {
                            Id = 60,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "باكم الفرامل ",
                            ItemNameEn = "bakem - brakes",
                            Status = true
                        },
                        new
                        {
                            Id = 61,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "سلندر (امامي / خلفي) ",
                            ItemNameEn = "Slender (front/back)",
                            Status = true
                        },
                        new
                        {
                            Id = 62,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "سلك فرامل اليد (جلنط) ",
                            ItemNameEn = "Hand brake wire (galent)",
                            Status = true
                        },
                        new
                        {
                            Id = 63,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 6,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "ليات فرامل",
                            ItemNameEn = "Brake nights",
                            Status = true
                        },
                        new
                        {
                            Id = 64,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 7,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "العكوس الامامية ",
                            ItemNameEn = "Forward inverse",
                            Status = true
                        },
                        new
                        {
                            Id = 65,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 7,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "العكوس الخلفية",
                            ItemNameEn = " Rear inverse",
                            Status = true
                        },
                        new
                        {
                            Id = 66,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 7,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "العكوس الدفرنس",
                            ItemNameEn = " French inverse",
                            Status = true
                        },
                        new
                        {
                            Id = 67,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 7,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "دفرنس امام / خلفي",
                            ItemNameEn = " Frances in front/back",
                            Status = true
                        },
                        new
                        {
                            Id = 68,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 7,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "صوفة عكس (امامي / خلفي)",
                            ItemNameEn = " Reverse wool (front/back)",
                            Status = true
                        },
                        new
                        {
                            Id = 69,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "مقاعد وأحزمة",
                            ItemNameEn = " Seats and belts",
                            Status = true
                        },
                        new
                        {
                            Id = 70,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الضوابط والمفاتيح الداخلية",
                            ItemNameEn = " Internal controls and keys",
                            Status = true
                        },
                        new
                        {
                            Id = 71,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "فتحة السقف والنوافذ ",
                            ItemNameEn = " Sunroof and windows ",
                            Status = true
                        },
                        new
                        {
                            Id = 72,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "عداد الوقود ودرجة الحرارة",
                            ItemNameEn = " Fuel meter and temperature",
                            Status = true
                        },
                        new
                        {
                            Id = 73,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "لوحة القيادة وأجهزة القياس",
                            ItemNameEn = " Dashboard and measuring devices",
                            Status = true
                        },
                        new
                        {
                            Id = 74,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "نظام راديو / موسيقى",
                            ItemNameEn = " Radio/Music System",
                            Status = true
                        },
                        new
                        {
                            Id = 75,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "وسائد هوائية",
                            ItemNameEn = " Airbags",
                            Status = true
                        },
                        new
                        {
                            Id = 76,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "إمالة / قفل عجلة القيادة",
                            ItemNameEn = " Tilt/lock steering wheel",
                            Status = true
                        },
                        new
                        {
                            Id = 77,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 8,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "المرايا",
                            ItemNameEn = " Mirrors",
                            Status = true
                        },
                        new
                        {
                            Id = 78,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 9,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الجهة الامامية",
                            ItemNameEn = " Front",
                            Status = true
                        },
                        new
                        {
                            Id = 79,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 9,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الجهة الخلفية",
                            ItemNameEn = " Back side",
                            Status = true
                        },
                        new
                        {
                            Id = 80,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 9,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الجهة اليمنى",
                            ItemNameEn = " Right side",
                            Status = true
                        },
                        new
                        {
                            Id = 81,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 9,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "الجهة اليسرى",
                            ItemNameEn = " Left side",
                            Status = true
                        },
                        new
                        {
                            Id = 82,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionSectionId = 9,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            ItemNameAr = "اعلى السيارة ( التنده)",
                            ItemNameEn = " Top of the car ( Ceiling)",
                            Status = true
                        });
                });

            modelBuilder.Entity("DL.Entities.InspectionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Excellent")
                        .HasColumnType("bit");

                    b.Property<bool?>("Good")
                        .HasColumnType("bit");

                    b.Property<int>("InspectionWarshahReportId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemNameEn")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("VeryGood")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InspectionWarshahReportId");

                    b.ToTable("InspectionReports");
                });

            modelBuilder.Entity("DL.Entities.InspectionSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InspectionTemplateId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommon")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SectionNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SectionNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionTemplateId");

                    b.HasIndex("WarshahId");

                    b.ToTable("InspectionSections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = " الماكينة",
                            SectionNameEn = " Machine "
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الجيربوكس",
                            SectionNameEn = " Limebox "
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "نظام الكهرباء",
                            SectionNameEn = " Electricity system "
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "السوائل",
                            SectionNameEn = " Fluids "
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "أسفل السيارة",
                            SectionNameEn = " Under the Car "
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "نظام الفرامل",
                            SectionNameEn = " Brake system "
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الدفرنس / الكورونا",
                            SectionNameEn = " Aldverse / Corona "
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "القسم الداخلي",
                            SectionNameEn = " Internal Section "
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 1,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الهيكل الخارجي",
                            SectionNameEn = " Exterior structure "
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = " الماكينة",
                            SectionNameEn = " Machine "
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الجيربوكس",
                            SectionNameEn = " Limebox "
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "نظام الكهرباء",
                            SectionNameEn = " Electricity system "
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "السوائل",
                            SectionNameEn = " Fluids "
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "أسفل السيارة",
                            SectionNameEn = " Under the Car "
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "نظام الفرامل",
                            SectionNameEn = " Brake system "
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الدفرنس / الكورونا",
                            SectionNameEn = " Aldverse / Corona "
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "القسم الداخلي",
                            SectionNameEn = " Internal Section "
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InspectionTemplateId = 2,
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            SectionNameAr = "الهيكل الخارجي",
                            SectionNameEn = " Exterior structure "
                        });
                });

            modelBuilder.Entity("DL.Entities.InspectionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("InspectionNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InspectionNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCommon")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahId");

                    b.ToTable("InspectionTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hours = 1,
                            InspectionNameAr = "مجاني",
                            InspectionNameEn = " Free Inspection ",
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            Price = 0m
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hours = 1,
                            InspectionNameAr = "فحص متقدم",
                            InspectionNameEn = "Advance Inspection ",
                            IsActive = true,
                            IsCommon = true,
                            IsDeleted = false,
                            Price = 100m
                        });
                });

            modelBuilder.Entity("DL.Entities.InspectionWarshahReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("KM_IN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MotorsId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalID")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarOwnerId");

                    b.HasIndex("MotorsId");

                    b.ToTable("InspectionWarshahReports");
                });

            modelBuilder.Entity("DL.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeforeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarOwnerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarOwnerCivilId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarOwnerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarOwnerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CheckPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscFixingMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscSpareMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FastServiceOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("FixingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InspectionWarshahReportId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("KMIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KMOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentTypeInvoiceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReciptionOrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RepairOrderId")
                        .HasColumnType("int");

                    b.Property<string>("TechReview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VatFixingMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VatMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VatSpareMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WarhshahCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahCR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahDescrit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarshahId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("WarshahName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahTaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InspectionWarshahReportId");

                    b.HasIndex("PaymentTypeInvoiceId");

                    b.HasIndex("ReciptionOrderId");

                    b.HasIndex("RepairOrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DL.Entities.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Garuntee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PeacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SparePartNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SparePartNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("DL.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DL.Entities.LoyalityPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoyalityPoints");
                });

            modelBuilder.Entity("DL.Entities.MotorColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ColorNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MotorColors");
                });

            modelBuilder.Entity("DL.Entities.MotorMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MakeNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MakeNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MotorMakes");
                });

            modelBuilder.Entity("DL.Entities.MotorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModelNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MotorMakeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MotorMakeId");

                    b.ToTable("MotorModels");
                });

            modelBuilder.Entity("DL.Entities.MotorYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotorYears");
                });

            modelBuilder.Entity("DL.Entities.Motors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ChassisNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MotorColorId")
                        .HasColumnType("int");

                    b.Property<int>("MotorMakeId")
                        .HasColumnType("int");

                    b.Property<int>("MotorModelId")
                        .HasColumnType("int");

                    b.Property<int>("MotorYearId")
                        .HasColumnType("int");

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarOwnerId");

                    b.HasIndex("MotorColorId");

                    b.HasIndex("MotorMakeId");

                    b.HasIndex("MotorModelId");

                    b.HasIndex("MotorYearId");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("DL.Entities.NoticeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DebitAndCreditorId")
                        .HasColumnType("int");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<decimal>("PeacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SparePartNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SparePartNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DebitAndCreditorId");

                    b.ToTable("NoticeProducts");
                });

            modelBuilder.Entity("DL.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DL.Entities.PaymentAndReceiptVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriptotion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentTypeInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("TypeVoucher")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeInvoiceId");

                    b.HasIndex("WarshahId");

                    b.ToTable("PaymentAndReceiptVouchers");
                });

            modelBuilder.Entity("DL.Entities.PaymentTypeInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentTypeNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentTypeNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypeInvoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            PaymentTypeNameAr = "نقدا",
                            PaymentTypeNameEn = " Cash "
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            PaymentTypeNameAr = "بطاقة ائتمان",
                            PaymentTypeNameEn = " Card "
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            PaymentTypeNameAr = "شيكات",
                            PaymentTypeNameEn = " cheque "
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            PaymentTypeNameAr = "آخرى",
                            PaymentTypeNameEn = " Other "
                        });
                });

            modelBuilder.Entity("DL.Entities.PersonDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPercentageForFixingPrice")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPercentageForSpareParts")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonDiscounts");
                });

            modelBuilder.Entity("DL.Entities.ReceiptVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriptotion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentTypeInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ReciptionOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeInvoiceId");

                    b.HasIndex("ReciptionOrderId");

                    b.HasIndex("WarshahId");

                    b.ToTable("ReceiptVouchers");
                });

            modelBuilder.Entity("DL.Entities.ReciptionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarOwnerDescribtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CheckPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("KM_In")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MotorsId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("ReciptionDescribtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReciptionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicanId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("warshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarOwnerId");

                    b.HasIndex("MotorsId");

                    b.HasIndex("PaymentTypeInvoiceId");

                    b.HasIndex("ReciptionId");

                    b.HasIndex("TecnicanId");

                    b.ToTable("ReciptionOrders");
                });

            modelBuilder.Entity("DL.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RegionNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegionNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            RegionNameAr = "الرياض",
                            RegionNameEn = " Elryad "
                        });
                });

            modelBuilder.Entity("DL.Entities.RepairOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddedDiscountForFixingPrice")
                        .HasColumnType("bit");

                    b.Property<bool>("AddedDiscountForSpareParts")
                        .HasColumnType("bit");

                    b.Property<decimal>("AfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeforeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscFixingMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscSpareMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FixingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Garuntee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InspectionTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("InspectionWarshahReportId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("KMOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReciptionOrderId")
                        .HasColumnType("int");

                    b.Property<int>("RepairOrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("SparePartsTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<string>("TechReview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VatFixingMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VatFixingPrice")
                        .HasColumnType("bit");

                    b.Property<decimal>("VatMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VatSpareMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VatSpareParts")
                        .HasColumnType("bit");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionTemplateId");

                    b.HasIndex("InspectionWarshahReportId");

                    b.HasIndex("ReciptionOrderId");

                    b.HasIndex("TechId");

                    b.ToTable("RepairOrders");
                });

            modelBuilder.Entity("DL.Entities.RepairOrderImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RepairOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RepairOrderImages");
                });

            modelBuilder.Entity("DL.Entities.RepairOrderSparePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Garuntee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PeacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RepairOrderId")
                        .HasColumnType("int");

                    b.Property<int>("SparePartId")
                        .HasColumnType("int");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RepairOrderId");

                    b.HasIndex("SparePartId");

                    b.HasIndex("TechId");

                    b.ToTable("RepairOrderSpareParts");
                });

            modelBuilder.Entity("DL.Entities.RoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoryBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RepairOrderId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RepairOrderId");

                    b.ToTable("RoHistories");
                });

            modelBuilder.Entity("DL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "WarshahOwner"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "CarOwner"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Technician"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Receptionist"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "acountant"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "SystemAdmin"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerAdmin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerLeader"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerAcountant"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sales"
                        });
                });

            modelBuilder.Entity("DL.Entities.SalesRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarDescribtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MotorId")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("ROID")
                        .HasColumnType("int");

                    b.Property<int?>("SalesRequestListId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SparePartTaseerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesRequestListId");

                    b.HasIndex("SparePartTaseerId");

                    b.ToTable("SalesRequests");
                });

            modelBuilder.Entity("DL.Entities.SalesRequestList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalesRequestLists");
                });

            modelBuilder.Entity("DL.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("DL.Entities.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("DL.Entities.ServiceInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BeforeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MotorsId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.Property<decimal>("afterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MotorsId");

                    b.HasIndex("TechId");

                    b.ToTable("ServiceInvoices");
                });

            modelBuilder.Entity("DL.Entities.ServiceInvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceInvoiceId");

                    b.ToTable("ServiceInvoiceItems");
                });

            modelBuilder.Entity("DL.Entities.ServiceWarshah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.Property<int>("warshahServiceTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("warshahServiceTypeID");

                    b.ToTable("ServiceWarshahs");
                });

            modelBuilder.Entity("DL.Entities.SparePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BuyBeforeVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CategorySparePartsId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MarginPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinimumRecordQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MotorMakeId")
                        .HasColumnType("int");

                    b.Property<int>("MotorModelId")
                        .HasColumnType("int");

                    b.Property<int>("MotorYearId")
                        .HasColumnType("int");

                    b.Property<string>("PartDescribtion")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PeacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("SellBeforeVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SparePartName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SubCategoryPartsId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VatBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VatSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorySparePartsId");

                    b.HasIndex("MotorMakeId");

                    b.HasIndex("MotorModelId");

                    b.HasIndex("MotorYearId");

                    b.HasIndex("SubCategoryPartsId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarshahId");

                    b.ToTable("SpareParts");
                });

            modelBuilder.Entity("DL.Entities.SparePartTaseer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategorySparePartsId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MotorMakeId")
                        .HasColumnType("int");

                    b.Property<int>("MotorModelId")
                        .HasColumnType("int");

                    b.Property<int>("MotorYearId")
                        .HasColumnType("int");

                    b.Property<string>("PartDescribtion")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNum")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PeacePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SparePartName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SubCategoryPartsId")
                        .HasColumnType("int");

                    b.Property<int?>("TaseerSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategorySparePartsId");

                    b.HasIndex("MotorMakeId");

                    b.HasIndex("MotorModelId");

                    b.HasIndex("MotorYearId");

                    b.HasIndex("SubCategoryPartsId");

                    b.HasIndex("TaseerSupplierId");

                    b.ToTable("SparePartTaseers");
                });

            modelBuilder.Entity("DL.Entities.Spicialists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Spicialists");
                });

            modelBuilder.Entity("DL.Entities.SubCategoryParts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorySparePartsId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryNameAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SubCategoryNameEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategorySparePartsId");

                    b.ToTable("SubCategoryParts");
                });

            modelBuilder.Entity("DL.Entities.Subscribtion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SubDurationInMonths")
                        .HasColumnType("int");

                    b.Property<string>("SubName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subscribtions");
                });

            modelBuilder.Entity("DL.Entities.SubscribtionInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PeriodSubscribtion")
                        .HasColumnType("int");

                    b.Property<decimal>("SubscribtionVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubscribtionWithoutVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSubscribtion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.Property<string>("WarshahName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahTaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscribtionInvoices");
                });

            modelBuilder.Entity("DL.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("RegionId");

                    b.HasIndex("WarshahId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DL.Entities.TaseerItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DelivaryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("RoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VinNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaseerItems");
                });

            modelBuilder.Entity("DL.Entities.TaseerSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaseerSuppliers");
                });

            modelBuilder.Entity("DL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommerialRegisterar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WarshahId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DL.Entities.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("DL.Entities.VerfiyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VirfeyCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VerfiyCodes");
                });

            modelBuilder.Entity("DL.Entities.Warshah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandLineNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Long")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ParentWarshahId")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SalesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNum")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarshahIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarshahNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warshah");
                });

            modelBuilder.Entity("DL.Entities.WarshahBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FixedBankId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FixedBankId");

                    b.HasIndex("WarshahId");

                    b.ToTable("WarshahBanks");
                });

            modelBuilder.Entity("DL.Entities.WarshahCountryMotor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FixedCountryMotorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FixedCountryMotorId");

                    b.ToTable("WarshahCountryMotors");
                });

            modelBuilder.Entity("DL.Entities.WarshahCustomers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WarshahCustomers");
                });

            modelBuilder.Entity("DL.Entities.WarshahFixedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WarshahFixedTypes");
                });

            modelBuilder.Entity("DL.Entities.WarshahModelsCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MotorModelId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotorModelId");

                    b.ToTable("WarshahModelsCars");
                });

            modelBuilder.Entity("DL.Entities.WarshahParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SpicialistsId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahServiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpicialistsId");

                    b.HasIndex("WarshahId");

                    b.HasIndex("WarshahServiceTypeId");

                    b.HasIndex("WarshahTypeId");

                    b.ToTable("WarshahParams");
                });

            modelBuilder.Entity("DL.Entities.WarshahServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WarshahServiceType");
                });

            modelBuilder.Entity("DL.Entities.WarshahShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WarshahShift");
                });

            modelBuilder.Entity("DL.Entities.WarshahType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahFixedTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahFixedTypeId");

                    b.ToTable("WarshahType");
                });

            modelBuilder.Entity("DL.Entities.WarshahVat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VatFixingPrice")
                        .HasColumnType("int");

                    b.Property<int>("VatSpareParts")
                        .HasColumnType("int");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WarshahVats");
                });

            modelBuilder.Entity("DL.Entities.WorkTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarshahId")
                        .HasColumnType("int");

                    b.Property<int>("WarshahShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarshahShiftId");

                    b.ToTable("WorkTimes");
                });

            modelBuilder.Entity("DL.Entities.permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("permission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "tech"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Recicp"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Common"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerAdmin"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerLeader"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 0,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "TaseerAccountant"
                        });
                });

            modelBuilder.Entity("DL.Entities.AuthrizedPerson", b =>
                {
                    b.HasOne("DL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DL.Entities.BalanceBank", b =>
                {
                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.Bank", b =>
                {
                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.BoxMoney", b =>
                {
                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.Cheque", b =>
                {
                    b.HasOne("DL.Entities.WarshahBank", "WarshahBank")
                        .WithMany()
                        .HasForeignKey("WarshahBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warshah");

                    b.Navigation("WarshahBank");
                });

            modelBuilder.Entity("DL.Entities.City", b =>
                {
                    b.HasOne("DL.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("DL.Entities.CreditorNotice", b =>
                {
                    b.HasOne("DL.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.DebitAndCreditor", b =>
                {
                    b.HasOne("DL.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.DebitNotice", b =>
                {
                    b.HasOne("DL.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.Duration", b =>
                {
                    b.HasOne("DL.Entities.Subscribtion", "Subscribtion")
                        .WithMany()
                        .HasForeignKey("SubscribtionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscribtion");
                });

            modelBuilder.Entity("DL.Entities.ExpensesTransaction", b =>
                {
                    b.HasOne("DL.Entities.ExpensesCategory", "ExpensesCategory")
                        .WithMany()
                        .HasForeignKey("ExpensesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.ExpensesType", "ExpensesType")
                        .WithMany()
                        .HasForeignKey("ExpensesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("ExpensesCategory");

                    b.Navigation("ExpensesType");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.ExpensesType", b =>
                {
                    b.HasOne("DL.Entities.ExpensesCategory", "ExpensesCategory")
                        .WithMany()
                        .HasForeignKey("ExpensesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("ExpensesCategory");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.InspectionItem", b =>
                {
                    b.HasOne("DL.Entities.InspectionSection", "InspectionSection")
                        .WithMany()
                        .HasForeignKey("InspectionSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("InspectionSection");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.InspectionReport", b =>
                {
                    b.HasOne("DL.Entities.InspectionWarshahReport", "InspectionWarshahReport")
                        .WithMany()
                        .HasForeignKey("InspectionWarshahReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionWarshahReport");
                });

            modelBuilder.Entity("DL.Entities.InspectionSection", b =>
                {
                    b.HasOne("DL.Entities.InspectionTemplate", "InspectionTemplate")
                        .WithMany()
                        .HasForeignKey("InspectionTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("InspectionTemplate");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.InspectionTemplate", b =>
                {
                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.InspectionWarshahReport", b =>
                {
                    b.HasOne("DL.Entities.User", "CarOwner")
                        .WithMany()
                        .HasForeignKey("CarOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Motors", "Motors")
                        .WithMany()
                        .HasForeignKey("MotorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarOwner");

                    b.Navigation("Motors");
                });

            modelBuilder.Entity("DL.Entities.Invoice", b =>
                {
                    b.HasOne("DL.Entities.InspectionWarshahReport", "InspectionWarshahReport")
                        .WithMany()
                        .HasForeignKey("InspectionWarshahReportId");

                    b.HasOne("DL.Entities.PaymentTypeInvoice", "PaymentTypeInvoice")
                        .WithMany()
                        .HasForeignKey("PaymentTypeInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.ReciptionOrder", "ReciptionOrder")
                        .WithMany()
                        .HasForeignKey("ReciptionOrderId");

                    b.HasOne("DL.Entities.RepairOrder", "RepairOrder")
                        .WithMany()
                        .HasForeignKey("RepairOrderId");

                    b.Navigation("InspectionWarshahReport");

                    b.Navigation("PaymentTypeInvoice");

                    b.Navigation("ReciptionOrder");

                    b.Navigation("RepairOrder");
                });

            modelBuilder.Entity("DL.Entities.InvoiceItem", b =>
                {
                    b.HasOne("DL.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("DL.Entities.MotorModel", b =>
                {
                    b.HasOne("DL.Entities.MotorMake", "MotorMake")
                        .WithMany()
                        .HasForeignKey("MotorMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MotorMake");
                });

            modelBuilder.Entity("DL.Entities.Motors", b =>
                {
                    b.HasOne("DL.Entities.User", "CarOwner")
                        .WithMany()
                        .HasForeignKey("CarOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorColor", "motorColor")
                        .WithMany()
                        .HasForeignKey("MotorColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorMake", "motorMake")
                        .WithMany()
                        .HasForeignKey("MotorMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorModel", "motorModel")
                        .WithMany()
                        .HasForeignKey("MotorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorYear", "motorYear")
                        .WithMany()
                        .HasForeignKey("MotorYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarOwner");

                    b.Navigation("motorColor");

                    b.Navigation("motorMake");

                    b.Navigation("motorModel");

                    b.Navigation("motorYear");
                });

            modelBuilder.Entity("DL.Entities.NoticeProduct", b =>
                {
                    b.HasOne("DL.Entities.DebitAndCreditor", "DebitAndCreditor")
                        .WithMany()
                        .HasForeignKey("DebitAndCreditorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebitAndCreditor");
                });

            modelBuilder.Entity("DL.Entities.PaymentAndReceiptVoucher", b =>
                {
                    b.HasOne("DL.Entities.PaymentTypeInvoice", "PaymentTypeInvoice")
                        .WithMany()
                        .HasForeignKey("PaymentTypeInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentTypeInvoice");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.ReceiptVoucher", b =>
                {
                    b.HasOne("DL.Entities.PaymentTypeInvoice", "PaymentTypeInvoice")
                        .WithMany()
                        .HasForeignKey("PaymentTypeInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.ReciptionOrder", "ReciptionOrder")
                        .WithMany()
                        .HasForeignKey("ReciptionOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentTypeInvoice");

                    b.Navigation("ReciptionOrder");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.ReciptionOrder", b =>
                {
                    b.HasOne("DL.Entities.User", "CarOwner")
                        .WithMany()
                        .HasForeignKey("CarOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Motors", "MotorId")
                        .WithMany()
                        .HasForeignKey("MotorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.PaymentTypeInvoice", "PaymentTypeInvoice")
                        .WithMany()
                        .HasForeignKey("PaymentTypeInvoiceId");

                    b.HasOne("DL.Entities.User", "Reciption")
                        .WithMany()
                        .HasForeignKey("ReciptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.User", "Tecnican")
                        .WithMany()
                        .HasForeignKey("TecnicanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarOwner");

                    b.Navigation("MotorId");

                    b.Navigation("PaymentTypeInvoice");

                    b.Navigation("Reciption");

                    b.Navigation("Tecnican");
                });

            modelBuilder.Entity("DL.Entities.Region", b =>
                {
                    b.HasOne("DL.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DL.Entities.RepairOrder", b =>
                {
                    b.HasOne("DL.Entities.InspectionTemplate", "InspectionTemplate")
                        .WithMany()
                        .HasForeignKey("InspectionTemplateId");

                    b.HasOne("DL.Entities.InspectionWarshahReport", "InspectionWarshahReport")
                        .WithMany()
                        .HasForeignKey("InspectionWarshahReportId");

                    b.HasOne("DL.Entities.ReciptionOrder", "ReciptionOrder")
                        .WithMany()
                        .HasForeignKey("ReciptionOrderId");

                    b.HasOne("DL.Entities.User", "Tech")
                        .WithMany()
                        .HasForeignKey("TechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionTemplate");

                    b.Navigation("InspectionWarshahReport");

                    b.Navigation("ReciptionOrder");

                    b.Navigation("Tech");
                });

            modelBuilder.Entity("DL.Entities.RepairOrderSparePart", b =>
                {
                    b.HasOne("DL.Entities.RepairOrder", "RepairOrder")
                        .WithMany()
                        .HasForeignKey("RepairOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.SparePart", "SparePart")
                        .WithMany()
                        .HasForeignKey("SparePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.User", "Tech")
                        .WithMany()
                        .HasForeignKey("TechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairOrder");

                    b.Navigation("SparePart");

                    b.Navigation("Tech");
                });

            modelBuilder.Entity("DL.Entities.RoHistory", b =>
                {
                    b.HasOne("DL.Entities.RepairOrder", "RepairOrder")
                        .WithMany()
                        .HasForeignKey("RepairOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairOrder");
                });

            modelBuilder.Entity("DL.Entities.SalesRequest", b =>
                {
                    b.HasOne("DL.Entities.SalesRequestList", "SalesRequestList")
                        .WithMany()
                        .HasForeignKey("SalesRequestListId");

                    b.HasOne("DL.Entities.SparePartTaseer", "SparePartTaseer")
                        .WithMany()
                        .HasForeignKey("SparePartTaseerId");

                    b.Navigation("SalesRequestList");

                    b.Navigation("SparePartTaseer");
                });

            modelBuilder.Entity("DL.Entities.Service", b =>
                {
                    b.HasOne("DL.Entities.ServiceCategory", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceCategory");
                });

            modelBuilder.Entity("DL.Entities.ServiceInvoice", b =>
                {
                    b.HasOne("DL.Entities.Motors", "Motors")
                        .WithMany()
                        .HasForeignKey("MotorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.User", "Tech")
                        .WithMany()
                        .HasForeignKey("TechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motors");

                    b.Navigation("Tech");
                });

            modelBuilder.Entity("DL.Entities.ServiceInvoiceItem", b =>
                {
                    b.HasOne("DL.Entities.ServiceInvoice", "ServiceInvoice")
                        .WithMany()
                        .HasForeignKey("ServiceInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceInvoice");
                });

            modelBuilder.Entity("DL.Entities.ServiceWarshah", b =>
                {
                    b.HasOne("DL.Entities.WarshahServiceType", "warshahServiceType")
                        .WithMany()
                        .HasForeignKey("warshahServiceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("warshahServiceType");
                });

            modelBuilder.Entity("DL.Entities.SparePart", b =>
                {
                    b.HasOne("DL.Entities.CategorySpareParts", "CategorySpareParts")
                        .WithMany()
                        .HasForeignKey("CategorySparePartsId");

                    b.HasOne("DL.Entities.MotorMake", "MotorMake")
                        .WithMany()
                        .HasForeignKey("MotorMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorModel", "MotorModel")
                        .WithMany()
                        .HasForeignKey("MotorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorYear", "motorYear")
                        .WithMany()
                        .HasForeignKey("MotorYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.SubCategoryParts", "SubCategoryParts")
                        .WithMany()
                        .HasForeignKey("SubCategoryPartsId");

                    b.HasOne("DL.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("CategorySpareParts");

                    b.Navigation("MotorMake");

                    b.Navigation("MotorModel");

                    b.Navigation("motorYear");

                    b.Navigation("SubCategoryParts");

                    b.Navigation("Supplier");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.SparePartTaseer", b =>
                {
                    b.HasOne("DL.Entities.CategorySpareParts", "CategorySpareParts")
                        .WithMany()
                        .HasForeignKey("CategorySparePartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorMake", "MotorMake")
                        .WithMany()
                        .HasForeignKey("MotorMakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorModel", "MotorModel")
                        .WithMany()
                        .HasForeignKey("MotorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.MotorYear", "motorYear")
                        .WithMany()
                        .HasForeignKey("MotorYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.SubCategoryParts", "SubCategoryParts")
                        .WithMany()
                        .HasForeignKey("SubCategoryPartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.TaseerSupplier", "TaseerSupplier")
                        .WithMany()
                        .HasForeignKey("TaseerSupplierId");

                    b.Navigation("CategorySpareParts");

                    b.Navigation("MotorMake");

                    b.Navigation("MotorModel");

                    b.Navigation("motorYear");

                    b.Navigation("SubCategoryParts");

                    b.Navigation("TaseerSupplier");
                });

            modelBuilder.Entity("DL.Entities.SubCategoryParts", b =>
                {
                    b.HasOne("DL.Entities.CategorySpareParts", "CategorySpareParts")
                        .WithMany()
                        .HasForeignKey("CategorySparePartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategorySpareParts");
                });

            modelBuilder.Entity("DL.Entities.Supplier", b =>
                {
                    b.HasOne("DL.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("DL.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("DL.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Region");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.User", b =>
                {
                    b.HasOne("DL.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId");

                    b.Navigation("Role");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.WarshahBank", b =>
                {
                    b.HasOne("DL.Entities.FixedBank", "FixedBank")
                        .WithMany()
                        .HasForeignKey("FixedBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixedBank");

                    b.Navigation("Warshah");
                });

            modelBuilder.Entity("DL.Entities.WarshahCountryMotor", b =>
                {
                    b.HasOne("DL.Entities.FixedCountryMotor", "FixedCountryMotor")
                        .WithMany()
                        .HasForeignKey("FixedCountryMotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixedCountryMotor");
                });

            modelBuilder.Entity("DL.Entities.WarshahModelsCar", b =>
                {
                    b.HasOne("DL.Entities.MotorModel", "MotorModel")
                        .WithMany()
                        .HasForeignKey("MotorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MotorModel");
                });

            modelBuilder.Entity("DL.Entities.WarshahParams", b =>
                {
                    b.HasOne("DL.Entities.Spicialists", "Spicialists")
                        .WithMany()
                        .HasForeignKey("SpicialistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.Warshah", "Warshah")
                        .WithMany()
                        .HasForeignKey("WarshahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.WarshahServiceType", "WarshahServiceType")
                        .WithMany()
                        .HasForeignKey("WarshahServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DL.Entities.WarshahType", "WarshahType")
                        .WithMany()
                        .HasForeignKey("WarshahTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spicialists");

                    b.Navigation("Warshah");

                    b.Navigation("WarshahServiceType");

                    b.Navigation("WarshahType");
                });

            modelBuilder.Entity("DL.Entities.WarshahType", b =>
                {
                    b.HasOne("DL.Entities.WarshahFixedType", "WarshahFixedType")
                        .WithMany()
                        .HasForeignKey("WarshahFixedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WarshahFixedType");
                });

            modelBuilder.Entity("DL.Entities.WorkTime", b =>
                {
                    b.HasOne("DL.Entities.WarshahShift", "WarshahShift")
                        .WithMany()
                        .HasForeignKey("WarshahShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WarshahShift");
                });
#pragma warning restore 612, 618
        }
    }
}
